// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type Submissionstate string

const (
	SubmissionstateSubmitted      Submissionstate = "Submitted"
	SubmissionstateActionRequired Submissionstate = "ActionRequired"
	SubmissionstateAccepted       Submissionstate = "Accepted"
)

func (e *Submissionstate) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Submissionstate(s)
	case string:
		*e = Submissionstate(s)
	default:
		return fmt.Errorf("unsupported scan type for Submissionstate: %T", src)
	}
	return nil
}

type NullSubmissionstate struct {
	Submissionstate Submissionstate
	Valid           bool // Valid is true if Submissionstate is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSubmissionstate) Scan(value interface{}) error {
	if value == nil {
		ns.Submissionstate, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Submissionstate.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSubmissionstate) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Submissionstate), nil
}

type Bingo struct {
	ID          int32
	Title       string
	Validfrom   pgtype.Timestamp
	Validto     pgtype.Timestamp
	Rows        int32
	Cols        int32
	Description string
	Codephrase  string
	Ready       bool
}

type BingosLogin struct {
	BingoID int32
	LoginID int32
}

type Login struct {
	ID           int32
	Name         string
	IsManagement bool
	Password     string
}

type Submission struct {
	ID      int32
	LoginID int32
	TileID  int32
	Date    pgtype.Timestamp
	State   Submissionstate
}

type SubmissionComment struct {
	ID           int32
	Comment      string
	SubmissionID int32
	CreatedAt    pgtype.Timestamptz
	LoginID      int32
}

type SubmissionImage struct {
	ID           int32
	Path         string
	SubmissionID int32
}

type TemplateTile struct {
	ID          int32
	Title       string
	Imagepath   string
	Description string
}

type Tile struct {
	ID          int32
	Title       string
	Imagepath   string
	Description string
	BingoID     int32
}
