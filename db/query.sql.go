// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package db

import (
	"context"
)

const createLogin = `-- name: CreateLogin :exec
INSERT INTO logins(password, name, is_management) VALUES($1, $2, $3) returning id, name, is_management, password
`

type CreateLoginParams struct {
	Password     string
	Name         string
	IsManagement bool
}

func (q *Queries) CreateLogin(ctx context.Context, arg CreateLoginParams) error {
	_, err := q.db.Exec(ctx, createLogin, arg.Password, arg.Name, arg.IsManagement)
	return err
}

const getAllLogins = `-- name: GetAllLogins :many
select id, name, is_management, password from public.logins
`

func (q *Queries) GetAllLogins(ctx context.Context) ([]Login, error) {
	rows, err := q.db.Query(ctx, getAllLogins)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Login
	for rows.Next() {
		var i Login
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.IsManagement,
			&i.Password,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
