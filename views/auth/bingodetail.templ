package auth

import "github.com/kaffeed/bingoscape/views/layout"
import "github.com/kaffeed/bingoscape/services"
import "fmt"
import "github.com/kaffeed/bingoscape/views/components"

templ BingoDetail(isManagement bool, bingo services.Bingo, participants services.Participants, possibleParticipants services.Participants, loginId int) {
	<div class="flex flex-col w-full">
		<section class="mx-auto w-3/5 flex flex-col gap-8 text-center">
			<div class="hero min-w-screen bg-base-200">
				<div class="hero-content text-center">
					<div class="max-w-md">
						<h1 class="text-5xl font-bold">{ bingo.Title }</h1>
						<p class="py-6">{ bingo.Title }</p>
						if isManagement {
							<button class="btn btn-primary">Get Started</button>
						}
					</div>
				</div>
			</div>
			<div class="divider"></div>
			<div
				class={ "grid" , "grid-flow-col" , fmt.Sprintf("grid-rows-%d",bingo.Rows), fmt.Sprintf("grid-cols-%d",
		bingo.Cols), "gap-1" }
			>
				for _, t := range bingo.Tiles {
					<div
						hx-get={ fmt.Sprintf("/tiles/%d", t.Id) }
						class="cursor-pointer"
						hx-swap="transition:true"
						hx-target="body"
						hx-push-url="true"
					>
						<img src={ t.ImagePath } class="grid-item" alt="Shoes"/>
						@stats(isManagement, t.Stats(loginId))
					</div>
				}
			</div>
		</section>
		<div class="divider"></div>
		<section class="mx-auto w-3/5 flex flex-col gap-8 text-center">
			@components.BingoTeams(isManagement, bingo, participants, possibleParticipants)
		</section>
		<div class="divider"></div>
	</div>
}

templ stats(isManagement bool, s services.TileStats) {
	if isManagement {
		<div class="tooltip text-lg" data-tip="Submitted">
			<div class="badge badge-info gap-2">
				{ fmt.Sprintf("%d", s.Submitted) }
			</div>
		</div>
		<div class="tooltip text-lg" data-tip="Accepted">
			<div class="badge badge-success gap-2">
				{ fmt.Sprintf("%d", s.Accepted) }
			</div>
		</div>
		<div class="tooltip text-lg" data-tip="Requires User Action">
			<div class="badge badge-warning gap-2">
				{ fmt.Sprintf("%d", s.NeedReview) }
			</div>
		</div>
	} else {
		@components.SubmissionBadge(s.State, false)
	}
}

templ BingoDetailIndex(
	title,
	username string,
	isAuthenticated bool,
	isManagement bool,
	isError bool,
	errMsgs, sucMsgs []string,
	cmp templ.Component) {
	@layout.Base(title, username, isAuthenticated, isManagement, isError, errMsgs, sucMsgs) {
		@cmp
	}
}
