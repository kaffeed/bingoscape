package auth

import "github.com/kaffeed/bingoscape/views/layout"
import "fmt"
import "github.com/kaffeed/bingoscape/views/components"
import "github.com/kaffeed/bingoscape/views"

templ BingoDetail(isManagement bool, bingo views.BingoDetailModel, loginId int32) {
	<div class="flex flex-col w-full">
		<section class="mx-auto w-3/5 flex flex-col gap-8 text-center">
			<div class="hero min-w-screen bg-base-200 py-12 px-4">
				<div class="hero-content text-center">
					<div class="max-w-md mx-auto">
						<h1 class="text-5xl font-bold leading-tight">{ bingo.Title }</h1>
						<p class="py-4 text-4xl md:text-2xl font-bold flex items-center">
							<span class="mr-2">Codephrase:</span>
							<span class="badge badge-primary">"{ bingo.Codephrase }"</span>
						</p>
						<p class="py-6 text-lg md:text-xl">{ bingo.Description }</p>
						<p class="py-2 text-sm md:text-md">Valid from: { bingo.Validfrom.Time.Format("Jan 2, 2006 3:04 PM") } to { bingo.Validto.Time.Format("Jan 2, 2006 3:04 PM") }</p>
						<p class="py-2 text-sm md:text-md">Grid Size: { fmt.Sprintf("%d", bingo.Rows) } x { fmt.Sprintf("%d", bingo.Cols) }</p>
						<div class="mt-6">
							<a href="#get-started" class="btn btn-primary">Get Started</a>
						</div>
						if isManagement {
							<div class="mt-4">
								<button class="btn btn-info">Set as ready</button>
							</div>
						}
					</div>
				</div>
			</div>
			<div class="divider"></div>
			<div
				class={ "grid" , "grid-flow-col" , fmt.Sprintf("grid-rows-%d",bingo.Rows), fmt.Sprintf("grid-cols-%d",
		bingo.Cols), "gap-1" }
			>
				for _, t := range bingo.Tiles {
					@tileView(isManagement, t, loginId)
				}
			</div>
		</section>
		<div class="divider"></div>
		<section class="mx-auto w-3/5 flex flex-col gap-8 text-center">
			@components.BingoTeams(isManagement, bingo)
		</section>
		<div class="divider"></div>
	</div>
}

templ tileView(isManagement bool, t views.TileModel, loginId int32) {
	<div
		hx-get={ fmt.Sprintf("/tiles/%d", t.ID) }
		class="cursor-pointer relative "
		hx-swap="transition:true"
		hx-target="body"
		hx-push-url="true"
	>
		<img src={ t.Imagepath } class="grid-item" alt="Shoes"/>
		if isManagement {
			if t.Stats(loginId).HasSubmissions {
				<div class="absolute inset-0 bg-gray-900 opacity-40 rounded-md"></div>
				<div class="absolute inset-0 flex items-center justify-center">
					@stats(isManagement, t.Stats(loginId))
				</div>
			}
		} else {
			if t.Stats(loginId).State != "" {
				<div class="absolute inset-0 bg-gray-900 opacity-40 rounded-md"></div>
				<div class="absolute inset-0 flex items-center justify-center">
					@stats(isManagement, t.Stats(loginId))
				</div>
			}
		}
	</div>
}

templ stats(isManagement bool, s views.TileStats) {
	if isManagement {
		<div class="tooltip text-lg" data-tip="Submitted">
			<div class="badge badge-info gap-2">
				{ fmt.Sprintf("%d", s.Submitted) }
			</div>
		</div>
		<div class="tooltip text-lg" data-tip="Accepted">
			<div class="badge badge-success gap-2">
				{ fmt.Sprintf("%d", s.Accepted) }
			</div>
		</div>
		<div class="tooltip text-lg" data-tip="Requires User Action">
			<div class="badge badge-warning gap-2">
				{ fmt.Sprintf("%d", s.NeedReview) }
			</div>
		</div>
	} else {
		@components.SubmissionIcons(s.State)
	}
}

templ BingoDetailIndex(
	title,
	username string,
	isAuthenticated bool,
	isManagement bool,
	isError bool,
	errMsgs, sucMsgs []string,
	cmp templ.Component) {
	@layout.Base(title, username, isAuthenticated, isManagement, isError, errMsgs, sucMsgs) {
		@cmp
	}
}
