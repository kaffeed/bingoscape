// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForCreateTiles implements pgx.CopyFromSource.
type iteratorForCreateTiles struct {
	rows                 []CreateTilesParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateTiles) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateTiles) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Title,
		r.rows[0].Imagepath,
		r.rows[0].Description,
		r.rows[0].BingoID,
		r.rows[0].Weight,
		r.rows[0].SecondaryImagePath,
	}, nil
}

func (r iteratorForCreateTiles) Err() error {
	return nil
}

func (q *Queries) CreateTiles(ctx context.Context, arg []CreateTilesParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"tiles"}, []string{"title", "imagepath", "description", "bingo_id", "weight", "secondary_image_path"}, &iteratorForCreateTiles{rows: arg})
}
