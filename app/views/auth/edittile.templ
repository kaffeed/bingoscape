package auth

import "github.com/kaffeed/bingoscape/app/views/layout"
import "github.com/kaffeed/bingoscape/app/views/components"
import "fmt"
import "github.com/kaffeed/bingoscape/app/views"
import "github.com/kaffeed/bingoscape/app/db"

templ Tile(isManagement bool, tm views.TileModel, loginId int32) {
	<section class="mx-auto w-2/5 flex flex-col gap-8 text-center" id="editTileView">
		<div class="card lg:card-side bg-base-100 shadow-xl w-full">
			<figure><img src={ tm.Tile.Imagepath } class="tile-card-image justify-center" alt="Tile"/></figure>
			<div class="card-body">
				if !isManagement {
					<h2 class="card-title">{ tm.Tile.Title } <span class="badge badge-secondary flex gap-2 items-center"><i class="fa-solid fa-weight-hanging"></i> { fmt.Sprintf(" %d", tm.Tile.Weight) }</span></h2>
					<p>{ tm.Tile.Description }</p>
					<p>{}</p>
				} else {
					@EditTile(isManagement, tm)
					<div hx-get="/tiles/templates"></div>
				}
			</div>
		</div>
		if !isManagement && tm.Stats(loginId).State != db.SubmissionstateAccepted {
			<div class="divider"></div>
			@components.SubmissionForm(isManagement, tm.Tile.ID)
		}
		<div class="divider"></div>
		<div hx-get={ fmt.Sprintf("/tiles/%d/submissions", tm.Tile.ID) } hx-swap="outerHTML" hx-trigger="load"></div>
	</section>
}

templ editTileFormControls(isManagement bool, tile views.TileModel) {
	<label class="flex flex-col justify-start gap-2">
		Title:
		<input
			class="input input-bordered w-full max-w-xs"
			type="text"
			name="title"
			required
			minlength="4"
			maxlength="250"
			disabled?={ !isManagement }
			if !isManagement {
				value="disabled"
			} else {
				value={ tile.Title }
			}
		/>
	</label>
	<label class="flex flex-col justify-start gap-2">
		Description:
		<input
			class="textarea textarea-bordered"
			type="textarea"
			name="description"
			required
			minlength="4"
			maxlength="5000"
			disabled?={ !isManagement }
			if !isManagement {
				value="disabled"
			} else {
				value={ tile.Description }
			}
		/>
	</label>
	<label class="flex flex-col justify-start gap-2">
		Weight:
		<input
			type="number"
			name="weight"
			class="input input-bordered input-primary bg-slate-800"
			placeholder="5"
			value="1"
			min="1"
			required
		/>
	</label>
	<label class="flex flex-col justify-start gap-2">
		Image:
		<input
			class="file-input file-input-bordered w-full max-w-xs"
			type="file"
			name="file"
			disabled?={ !isManagement }
			if !isManagement {
				value="disabled"
			}
		/>
	</label>
	<label class="flex flex-col justify-start gap-2">
		Save as Template:
		<input
			class="checkbox checkbox-primary"
			type="checkbox"
			name="saveAsTemplate"
			disabled?={ !isManagement }
		/>
	</label>
	<input type="hidden" name="imagepath" value={ tile.Imagepath }/>
}

templ EditTile(isManagement bool, tm views.TileModel) {
	<div class="card-actions justify-end">
		<form
			hx-swap="transition:true"
			class="rounded-xl drop-shadow-xl flex flex-col gap-4 w-96 p-8"
			enctype="multipart/form-data"
			action=""
			method="put"
		>
			@editTileFormControls(isManagement, tm)
			<footer class="card-actions justify-end">
				<select
					hx-get={ fmt.Sprintf("/tiles/%d/templates", tm.ID) }
					hx-target="#editTileView"
					hx-trigger="change"
					hx-swap="outerHTML"
					name="templateId"
					class="select select-bordered w-full max-w-xs"
				>
					<option disabled selected>Load from template</option>
					for _, t := range tm.Templates {
						<option value={ fmt.Sprintf("%d", t.ID) }>{ t.Title } </option>
					}
				</select>
				<button class="badge badge-primary px-6 py-4 hover:scale-[1.1]" disabled?={ !isManagement }>
					Update
				</button>
			</footer>
		</form>
	</div>
}

templ TileIndex(title string, username string, isAuthenticated bool, isManagement bool, isError bool, errMsgs,
	sucMsgs []string, cmp templ.Component) {
	@layout.Base(title, username, isAuthenticated, isManagement, isError, errMsgs, sucMsgs) {
		@cmp
	}
}
