package auth

import "github.com/kaffeed/bingoscape/app/views/layout"
import "github.com/kaffeed/bingoscape/app/db"
import "fmt"

templ TemplateTiles(templates []db.TemplateTile) {
	<div class="flex flex-col w-full">
		<section class="mx-auto w-3/5 flex flex-col gap-8 text-center">
			if len(templates) == 0 {
				<p>
					Pretty empty here, huh? Try creating a template tile during bingo creation.
				</p>
			} else {
				<table class="table">
					<thead>
						@tableHeaders()
					</thead>
					<tbody>
						for _, tpl := range templates {
							@templateTableRow(tpl)
						}
					</tbody>
					<tfoot>
						@tableHeaders()
					</tfoot>
				</table>
			}
		</section>
	</div>
}

templ templateTableRow(t db.TemplateTile) {
	<tr>
		<td></td>
		<td>{ t.Title }</td>
		<td>{ t.Description }</td>
		<td>{ fmt.Sprintf("%d", t.Weight) }</td>
		<td>
			<a href={ templ.URL(t.Imagepath) } target="_blank">
				<img src={ t.Imagepath } alt={ t.Title } class="w-32 h-32 object-cover"/>
			</a>
		</td>
		<td>
			<a href={ templ.URL(t.SecondaryImagePath) } target="_blank">
				<img src={ t.SecondaryImagePath } alt={ t.Title } class="w-32 h-32 object-cover"/>
			</a>
		</td>
		<td></td>
	</tr>
}

templ tableHeaders() {
	<tr>
		<th></th>
		<th>Title</th>
		<th>Description</th>
		<th>Weight</th>
		<th>HeaderImage</th>
		<th>Secondary Image</th>
		<th></th>
	</tr>
}

templ TemplateTilesIndex(
	title,
	username string,
	isAuthenticated bool,
	isManagement bool,
	isError bool,
	errMsgs, sucMsgs []string,
	cmp templ.Component) {
	@layout.Base(title, username, isAuthenticated, isManagement, isError, errMsgs, sucMsgs) {
		@cmp
	}
}
